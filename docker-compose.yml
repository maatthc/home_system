version: "3.7"

x-vars:
  - &TZ TZ=Australia/Melbourne
  - &DnsRestart
    restart: always
    extra_hosts:
      - "tv.home:${IP}"

services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - 8080:80
      - 53:53/tcp
      - 53:53/udp
    environment:
      - *TZ
      - VIRTUAL_HOST=alien
      - PIHOLE_UID=${UID}
      - PIHOLE_GID=${UID}
    volumes:
      - ./pi-hole/etc-pihole:/etc/pihole
      - ./pi-hole/etc-dnsmasq.d:/etc/dnsmasq.d
    <<: *DnsRestart

  jupyter:
    image: quay.io/jupyter/pyspark-notebook
    container_name: jupyterlabs
    user: ${UID}:${UID}
    environment:
      - NB_UID=${UID}
      - NB_GID=${UID}
      - *TZ
    volumes:
      - ${DIR}/Documents/notebooks/:/home/jovyan/
    ports:
      - 8888:8888
    <<: *DnsRestart

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${UID}
      - PGID=${UID}
      - *TZ
    volumes:
      - ./sonarr/config:/config
      - ${DIR}/TV:/tv
      - ${DIR}/Downloads:/downloads
    ports:
      - 8989:8989
    <<: *DnsRestart

  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=${UID}
      - PGID=${UID}
      - *TZ
      - AUTO_UPDATE=true
      - RUN_OPTS=
    volumes:
      - ./jackett/config:/config
      - ./jackett/downloads:/downloads
    ports:
      - 9117:9117
    <<: *DnsRestart

  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    environment:
      - PUID=${UID}
      - PGID=${UID}
      - *TZ
    volumes:
      - ./transmission/config:/config
      - ./transmission/watch:/watch
      - ${DIR}/Downloads:/downloads
      - ${DIR}/TV_small/XDANGER:/tv_small/XDANGER
      - ${DIR}/TV_small/transmission:/incomplete-dir
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    <<: *DnsRestart

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    user: ${UID}:${UID}
    network_mode: 'host'
    ports:
      - 8096:8096
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - ${DIR}/TV:/media
      - ${DIR}/TV/Music:/music
    restart: 'always'
    environment:
      - JELLYFIN_PublishedServerUrl=
      - *TZ
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    extra_hosts:
      - "host.docker.internal:${IP}"
      - "tv.home:${IP}"

  structurizr:
    image: structurizr/lite
    container_name: structurizr
    user: ${UID}:${UID}
    environment:
      - PUID=${UID}
      - PGID=${UID}
      - *TZ
    volumes:
      - ./structurizr:/usr/local/structurizr
    ports:
      - 8066:8080
    <<: *DnsRestart

  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ./homeassistant/:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - *TZ
    privileged: true
    network_mode: host
    ports:
      - 8123:8123
      - '192.168.0.253:80:80'
    <<: *DnsRestart

  hyperion:
    image: sirfragalot/hyperion.ng
    container_name: hyperion
    volumes:
      - ./hyperion:/root/.hyperion:rw
    network_mode: host
    ports:
      - 8090:8090
      - 19400:19400
      - 19445:19445
      - 19444:19444
    <<: *DnsRestart

  esphome:
    container_name: esphome
    image: esphome/esphome
    volumes:
      - ./esphome/config:/config
      - /etc/localtime:/etc/localtime:ro
    privileged: true
    network_mode: host
    ports:
      - 6052:6052
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/ttyUSB1:/dev/ttyUSB1
      - /dev/ttyUSB2:/dev/ttyUSB2
    <<: *DnsRestart

  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    environment:
      - PUID=${UID}
      - PGID=${UID}
    volumes:
      - ./heimdall/:/config
    ports:
      - '${IP}:80:80'
      - 8183:443
    <<: *DnsRestart

# Proxy server to bypass Cloudflare protection 
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
    ports:
      - "${PORT:-8191}:8191"
    <<: *DnsRestart

  new-trackon:
    image: corralpeltzer/newtrackon
    container_name: newtrackon
      #network_mode: host
    command: --ignore-ipv6 --port 1111 --address=0.0.0.0
    ports:
      - 1111:1111
    <<: *DnsRestart
